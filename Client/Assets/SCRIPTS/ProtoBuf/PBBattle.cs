// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PB_Battle.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PB_Battle.proto</summary>
public static partial class PBBattleReflection {

  #region Descriptor
  /// <summary>File descriptor for PB_Battle.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PBBattleReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9QQl9CYXR0bGUucHJvdG8iLwoOQmF0dGxlVXNlckluZm8SCwoDdWlkGAEg",
          "ASgFEhAKCGJhdHRsZUlEGAIgASgFIlIKC0JhdHRsZUVudGVyEgwKBHNlZWQY",
          "ASABKAUSEAoIYmF0dGxlSUQYAiABKAUSIwoKYWxsUGxheWVycxgDIAMoCzIP",
          "LkJhdHRsZVVzZXJJbmZvIjYKC0JhdHRsZVJlYWR5EicKDmJhdHRsZVVzZXJJ",
          "bmZvGAEgASgLMg8uQmF0dGxlVXNlckluZm8iDQoLQmF0dGxlU3RhcnQiGQoJ",
          "T3BlcmF0aW9uEgwKBG1vdmUYASABKAUibgoPUGxheWVyT3BlcmF0aW9uEhMK",
          "C29wZXJhdGlvbklEGAEgASgFEicKDmJhdHRsZVVzZXJJbmZvGAIgASgLMg8u",
          "QmF0dGxlVXNlckluZm8SHQoJb3BlcmF0aW9uGAMgASgLMgouT3BlcmF0aW9u",
          "IkAKEkFsbFBsYXllck9wZXJhdGlvbhIqChBwbGF5ZXJPcGVyYXRpb25zGAEg",
          "AygLMhAuUGxheWVyT3BlcmF0aW9uIk0KEVVwUGxheWVyT3BlcmF0aW9uEg0K",
          "BW1lc0lEGAEgASgFEikKD3BsYXllck9wZXJhdGlvbhgCIAEoCzIQLlBsYXll",
          "ck9wZXJhdGlvbiJTChREb3duUGxheWVyT3BlcmF0aW9ucxIPCgdmcmFtZUlE",
          "GAEgASgFEioKEHBsYXllck9wZXJhdGlvbnMYAiADKAsyEC5QbGF5ZXJPcGVy",
          "YXRpb24iUgoRUmVxdWVzdExhY2tGcmFtZXMSJwoOYmF0dGxlVXNlckluZm8Y",
          "ASABKAsyDy5CYXR0bGVVc2VySW5mbxIUCgxsYWNrRnJhbWVJRHMYAiADKAUi",
          "PwoSUmVzcG9uc2VMYWNrRnJhbWVzEikKCmxhY2tGcmFtZXMYASADKAsyFS5E",
          "b3duUGxheWVyT3BlcmF0aW9ucyI6Cg9SZXF1ZXN0R2FtZU92ZXISJwoOYmF0",
          "dGxlVXNlckluZm8YASABKAsyDy5CYXR0bGVVc2VySW5mbyISChBSZXNwb25z",
          "ZUdhbWVPdmVyIkEKCVJlY29ubmVjdBILCgN1aWQYASABKAUSEAoIY2xpZW50",
          "SVAYAiABKAkSFQoNY2xpZW50VWRwUG9ydBgDIAEoBSJoChFSZWNvbm5lY3RS",
          "ZXNwb25zZRIOCgZyZXN1bHQYASABKAgSDAoEc2VlZBgCIAEoBRIQCghiYXR0",
          "bGVJRBgDIAEoBRIjCgphbGxQbGF5ZXJzGAQgAygLMg8uQmF0dGxlVXNlcklu",
          "Zm9iBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::BattleUserInfo), global::BattleUserInfo.Parser, new[]{ "Uid", "BattleID" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BattleEnter), global::BattleEnter.Parser, new[]{ "Seed", "BattleID", "AllPlayers" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BattleReady), global::BattleReady.Parser, new[]{ "BattleUserInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BattleStart), global::BattleStart.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Operation), global::Operation.Parser, new[]{ "Move" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerOperation), global::PlayerOperation.Parser, new[]{ "OperationID", "BattleUserInfo", "Operation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AllPlayerOperation), global::AllPlayerOperation.Parser, new[]{ "PlayerOperations" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UpPlayerOperation), global::UpPlayerOperation.Parser, new[]{ "MesID", "PlayerOperation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::DownPlayerOperations), global::DownPlayerOperations.Parser, new[]{ "FrameID", "PlayerOperations" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RequestLackFrames), global::RequestLackFrames.Parser, new[]{ "BattleUserInfo", "LackFrameIDs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResponseLackFrames), global::ResponseLackFrames.Parser, new[]{ "LackFrames" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RequestGameOver), global::RequestGameOver.Parser, new[]{ "BattleUserInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResponseGameOver), global::ResponseGameOver.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Reconnect), global::Reconnect.Parser, new[]{ "Uid", "ClientIP", "ClientUdpPort" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReconnectResponse), global::ReconnectResponse.Parser, new[]{ "Result", "Seed", "BattleID", "AllPlayers" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///处于一场对局中的玩家说必备的属性
/// </summary>
public sealed partial class BattleUserInfo : pb::IMessage<BattleUserInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BattleUserInfo> _parser = new pb::MessageParser<BattleUserInfo>(() => new BattleUserInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BattleUserInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleUserInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleUserInfo(BattleUserInfo other) : this() {
    uid_ = other.uid_;
    battleID_ = other.battleID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleUserInfo Clone() {
    return new BattleUserInfo(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "battleID" field.</summary>
  public const int BattleIDFieldNumber = 2;
  private int battleID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BattleID {
    get { return battleID_; }
    set {
      battleID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BattleUserInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BattleUserInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    if (BattleID != other.BattleID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (BattleID != 0) hash ^= BattleID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (BattleID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BattleID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (BattleID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BattleID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (BattleID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BattleUserInfo other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    if (other.BattleID != 0) {
      BattleID = other.BattleID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
        case 16: {
          BattleID = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
        case 16: {
          BattleID = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///匹配成功后由服务器端发送给客户端
/// </summary>
public sealed partial class BattleEnter : pb::IMessage<BattleEnter>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BattleEnter> _parser = new pb::MessageParser<BattleEnter>(() => new BattleEnter());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BattleEnter> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleEnter() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleEnter(BattleEnter other) : this() {
    seed_ = other.seed_;
    battleID_ = other.battleID_;
    allPlayers_ = other.allPlayers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleEnter Clone() {
    return new BattleEnter(this);
  }

  /// <summary>Field number for the "seed" field.</summary>
  public const int SeedFieldNumber = 1;
  private int seed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Seed {
    get { return seed_; }
    set {
      seed_ = value;
    }
  }

  /// <summary>Field number for the "battleID" field.</summary>
  public const int BattleIDFieldNumber = 2;
  private int battleID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BattleID {
    get { return battleID_; }
    set {
      battleID_ = value;
    }
  }

  /// <summary>Field number for the "allPlayers" field.</summary>
  public const int AllPlayersFieldNumber = 3;
  private static readonly pb::FieldCodec<global::BattleUserInfo> _repeated_allPlayers_codec
      = pb::FieldCodec.ForMessage(26, global::BattleUserInfo.Parser);
  private readonly pbc::RepeatedField<global::BattleUserInfo> allPlayers_ = new pbc::RepeatedField<global::BattleUserInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::BattleUserInfo> AllPlayers {
    get { return allPlayers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BattleEnter);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BattleEnter other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Seed != other.Seed) return false;
    if (BattleID != other.BattleID) return false;
    if(!allPlayers_.Equals(other.allPlayers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Seed != 0) hash ^= Seed.GetHashCode();
    if (BattleID != 0) hash ^= BattleID.GetHashCode();
    hash ^= allPlayers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Seed != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Seed);
    }
    if (BattleID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BattleID);
    }
    allPlayers_.WriteTo(output, _repeated_allPlayers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Seed != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Seed);
    }
    if (BattleID != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(BattleID);
    }
    allPlayers_.WriteTo(ref output, _repeated_allPlayers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Seed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seed);
    }
    if (BattleID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleID);
    }
    size += allPlayers_.CalculateSize(_repeated_allPlayers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BattleEnter other) {
    if (other == null) {
      return;
    }
    if (other.Seed != 0) {
      Seed = other.Seed;
    }
    if (other.BattleID != 0) {
      BattleID = other.BattleID;
    }
    allPlayers_.Add(other.allPlayers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Seed = input.ReadInt32();
          break;
        }
        case 16: {
          BattleID = input.ReadInt32();
          break;
        }
        case 26: {
          allPlayers_.AddEntriesFrom(input, _repeated_allPlayers_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Seed = input.ReadInt32();
          break;
        }
        case 16: {
          BattleID = input.ReadInt32();
          break;
        }
        case 26: {
          allPlayers_.AddEntriesFrom(ref input, _repeated_allPlayers_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///当客户端进入战局后所有资源都加载完毕时发送给服务器端
/// </summary>
public sealed partial class BattleReady : pb::IMessage<BattleReady>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BattleReady> _parser = new pb::MessageParser<BattleReady>(() => new BattleReady());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BattleReady> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleReady() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleReady(BattleReady other) : this() {
    battleUserInfo_ = other.battleUserInfo_ != null ? other.battleUserInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleReady Clone() {
    return new BattleReady(this);
  }

  /// <summary>Field number for the "battleUserInfo" field.</summary>
  public const int BattleUserInfoFieldNumber = 1;
  private global::BattleUserInfo battleUserInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BattleUserInfo BattleUserInfo {
    get { return battleUserInfo_; }
    set {
      battleUserInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BattleReady);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BattleReady other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(BattleUserInfo, other.BattleUserInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (battleUserInfo_ != null) hash ^= BattleUserInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (battleUserInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BattleUserInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (battleUserInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BattleUserInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (battleUserInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleUserInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BattleReady other) {
    if (other == null) {
      return;
    }
    if (other.battleUserInfo_ != null) {
      if (battleUserInfo_ == null) {
        BattleUserInfo = new global::BattleUserInfo();
      }
      BattleUserInfo.MergeFrom(other.BattleUserInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///当所有玩家加载完毕后服务器端发送给客户端
/// </summary>
public sealed partial class BattleStart : pb::IMessage<BattleStart>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<BattleStart> _parser = new pb::MessageParser<BattleStart>(() => new BattleStart());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BattleStart> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleStart() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleStart(BattleStart other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BattleStart Clone() {
    return new BattleStart(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BattleStart);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BattleStart other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BattleStart other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class Operation : pb::IMessage<Operation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Operation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Operation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Operation(Operation other) : this() {
    move_ = other.move_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Operation Clone() {
    return new Operation(this);
  }

  /// <summary>Field number for the "move" field.</summary>
  public const int MoveFieldNumber = 1;
  private int move_;
  /// <summary>
  ///后期扩展
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Move {
    get { return move_; }
    set {
      move_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Operation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Operation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Move != other.Move) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Move != 0) hash ^= Move.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Move != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Move);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Move != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Move);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Move != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Move);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Operation other) {
    if (other == null) {
      return;
    }
    if (other.Move != 0) {
      Move = other.Move;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Move = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Move = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class PlayerOperation : pb::IMessage<PlayerOperation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PlayerOperation> _parser = new pb::MessageParser<PlayerOperation>(() => new PlayerOperation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerOperation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerOperation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerOperation(PlayerOperation other) : this() {
    operationID_ = other.operationID_;
    battleUserInfo_ = other.battleUserInfo_ != null ? other.battleUserInfo_.Clone() : null;
    operation_ = other.operation_ != null ? other.operation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerOperation Clone() {
    return new PlayerOperation(this);
  }

  /// <summary>Field number for the "operationID" field.</summary>
  public const int OperationIDFieldNumber = 1;
  private int operationID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int OperationID {
    get { return operationID_; }
    set {
      operationID_ = value;
    }
  }

  /// <summary>Field number for the "battleUserInfo" field.</summary>
  public const int BattleUserInfoFieldNumber = 2;
  private global::BattleUserInfo battleUserInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BattleUserInfo BattleUserInfo {
    get { return battleUserInfo_; }
    set {
      battleUserInfo_ = value;
    }
  }

  /// <summary>Field number for the "operation" field.</summary>
  public const int OperationFieldNumber = 3;
  private global::Operation operation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Operation Operation {
    get { return operation_; }
    set {
      operation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerOperation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerOperation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (OperationID != other.OperationID) return false;
    if (!object.Equals(BattleUserInfo, other.BattleUserInfo)) return false;
    if (!object.Equals(Operation, other.Operation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (OperationID != 0) hash ^= OperationID.GetHashCode();
    if (battleUserInfo_ != null) hash ^= BattleUserInfo.GetHashCode();
    if (operation_ != null) hash ^= Operation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (OperationID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(OperationID);
    }
    if (battleUserInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(BattleUserInfo);
    }
    if (operation_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Operation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (OperationID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(OperationID);
    }
    if (battleUserInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(BattleUserInfo);
    }
    if (operation_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Operation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (OperationID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(OperationID);
    }
    if (battleUserInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleUserInfo);
    }
    if (operation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerOperation other) {
    if (other == null) {
      return;
    }
    if (other.OperationID != 0) {
      OperationID = other.OperationID;
    }
    if (other.battleUserInfo_ != null) {
      if (battleUserInfo_ == null) {
        BattleUserInfo = new global::BattleUserInfo();
      }
      BattleUserInfo.MergeFrom(other.BattleUserInfo);
    }
    if (other.operation_ != null) {
      if (operation_ == null) {
        Operation = new global::Operation();
      }
      Operation.MergeFrom(other.Operation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          OperationID = input.ReadInt32();
          break;
        }
        case 18: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
        case 26: {
          if (operation_ == null) {
            Operation = new global::Operation();
          }
          input.ReadMessage(Operation);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          OperationID = input.ReadInt32();
          break;
        }
        case 18: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
        case 26: {
          if (operation_ == null) {
            Operation = new global::Operation();
          }
          input.ReadMessage(Operation);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class AllPlayerOperation : pb::IMessage<AllPlayerOperation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<AllPlayerOperation> _parser = new pb::MessageParser<AllPlayerOperation>(() => new AllPlayerOperation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AllPlayerOperation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AllPlayerOperation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AllPlayerOperation(AllPlayerOperation other) : this() {
    playerOperations_ = other.playerOperations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AllPlayerOperation Clone() {
    return new AllPlayerOperation(this);
  }

  /// <summary>Field number for the "playerOperations" field.</summary>
  public const int PlayerOperationsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PlayerOperation> _repeated_playerOperations_codec
      = pb::FieldCodec.ForMessage(10, global::PlayerOperation.Parser);
  private readonly pbc::RepeatedField<global::PlayerOperation> playerOperations_ = new pbc::RepeatedField<global::PlayerOperation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PlayerOperation> PlayerOperations {
    get { return playerOperations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AllPlayerOperation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AllPlayerOperation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!playerOperations_.Equals(other.playerOperations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= playerOperations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    playerOperations_.WriteTo(output, _repeated_playerOperations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    playerOperations_.WriteTo(ref output, _repeated_playerOperations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += playerOperations_.CalculateSize(_repeated_playerOperations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AllPlayerOperation other) {
    if (other == null) {
      return;
    }
    playerOperations_.Add(other.playerOperations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          playerOperations_.AddEntriesFrom(input, _repeated_playerOperations_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          playerOperations_.AddEntriesFrom(ref input, _repeated_playerOperations_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class UpPlayerOperation : pb::IMessage<UpPlayerOperation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<UpPlayerOperation> _parser = new pb::MessageParser<UpPlayerOperation>(() => new UpPlayerOperation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UpPlayerOperation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpPlayerOperation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpPlayerOperation(UpPlayerOperation other) : this() {
    mesID_ = other.mesID_;
    playerOperation_ = other.playerOperation_ != null ? other.playerOperation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UpPlayerOperation Clone() {
    return new UpPlayerOperation(this);
  }

  /// <summary>Field number for the "mesID" field.</summary>
  public const int MesIDFieldNumber = 1;
  private int mesID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MesID {
    get { return mesID_; }
    set {
      mesID_ = value;
    }
  }

  /// <summary>Field number for the "playerOperation" field.</summary>
  public const int PlayerOperationFieldNumber = 2;
  private global::PlayerOperation playerOperation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::PlayerOperation PlayerOperation {
    get { return playerOperation_; }
    set {
      playerOperation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UpPlayerOperation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UpPlayerOperation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MesID != other.MesID) return false;
    if (!object.Equals(PlayerOperation, other.PlayerOperation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MesID != 0) hash ^= MesID.GetHashCode();
    if (playerOperation_ != null) hash ^= PlayerOperation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (MesID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MesID);
    }
    if (playerOperation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PlayerOperation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (MesID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(MesID);
    }
    if (playerOperation_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(PlayerOperation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MesID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MesID);
    }
    if (playerOperation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerOperation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UpPlayerOperation other) {
    if (other == null) {
      return;
    }
    if (other.MesID != 0) {
      MesID = other.MesID;
    }
    if (other.playerOperation_ != null) {
      if (playerOperation_ == null) {
        PlayerOperation = new global::PlayerOperation();
      }
      PlayerOperation.MergeFrom(other.PlayerOperation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MesID = input.ReadInt32();
          break;
        }
        case 18: {
          if (playerOperation_ == null) {
            PlayerOperation = new global::PlayerOperation();
          }
          input.ReadMessage(PlayerOperation);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MesID = input.ReadInt32();
          break;
        }
        case 18: {
          if (playerOperation_ == null) {
            PlayerOperation = new global::PlayerOperation();
          }
          input.ReadMessage(PlayerOperation);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class DownPlayerOperations : pb::IMessage<DownPlayerOperations>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<DownPlayerOperations> _parser = new pb::MessageParser<DownPlayerOperations>(() => new DownPlayerOperations());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<DownPlayerOperations> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownPlayerOperations() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownPlayerOperations(DownPlayerOperations other) : this() {
    frameID_ = other.frameID_;
    playerOperations_ = other.playerOperations_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public DownPlayerOperations Clone() {
    return new DownPlayerOperations(this);
  }

  /// <summary>Field number for the "frameID" field.</summary>
  public const int FrameIDFieldNumber = 1;
  private int frameID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int FrameID {
    get { return frameID_; }
    set {
      frameID_ = value;
    }
  }

  /// <summary>Field number for the "playerOperations" field.</summary>
  public const int PlayerOperationsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::PlayerOperation> _repeated_playerOperations_codec
      = pb::FieldCodec.ForMessage(18, global::PlayerOperation.Parser);
  private readonly pbc::RepeatedField<global::PlayerOperation> playerOperations_ = new pbc::RepeatedField<global::PlayerOperation>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PlayerOperation> PlayerOperations {
    get { return playerOperations_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as DownPlayerOperations);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(DownPlayerOperations other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FrameID != other.FrameID) return false;
    if(!playerOperations_.Equals(other.playerOperations_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FrameID != 0) hash ^= FrameID.GetHashCode();
    hash ^= playerOperations_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (FrameID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FrameID);
    }
    playerOperations_.WriteTo(output, _repeated_playerOperations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (FrameID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(FrameID);
    }
    playerOperations_.WriteTo(ref output, _repeated_playerOperations_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FrameID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameID);
    }
    size += playerOperations_.CalculateSize(_repeated_playerOperations_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(DownPlayerOperations other) {
    if (other == null) {
      return;
    }
    if (other.FrameID != 0) {
      FrameID = other.FrameID;
    }
    playerOperations_.Add(other.playerOperations_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          FrameID = input.ReadInt32();
          break;
        }
        case 18: {
          playerOperations_.AddEntriesFrom(input, _repeated_playerOperations_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          FrameID = input.ReadInt32();
          break;
        }
        case 18: {
          playerOperations_.AddEntriesFrom(ref input, _repeated_playerOperations_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class RequestLackFrames : pb::IMessage<RequestLackFrames>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RequestLackFrames> _parser = new pb::MessageParser<RequestLackFrames>(() => new RequestLackFrames());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RequestLackFrames> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestLackFrames() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestLackFrames(RequestLackFrames other) : this() {
    battleUserInfo_ = other.battleUserInfo_ != null ? other.battleUserInfo_.Clone() : null;
    lackFrameIDs_ = other.lackFrameIDs_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestLackFrames Clone() {
    return new RequestLackFrames(this);
  }

  /// <summary>Field number for the "battleUserInfo" field.</summary>
  public const int BattleUserInfoFieldNumber = 1;
  private global::BattleUserInfo battleUserInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BattleUserInfo BattleUserInfo {
    get { return battleUserInfo_; }
    set {
      battleUserInfo_ = value;
    }
  }

  /// <summary>Field number for the "lackFrameIDs" field.</summary>
  public const int LackFrameIDsFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_lackFrameIDs_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> lackFrameIDs_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> LackFrameIDs {
    get { return lackFrameIDs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RequestLackFrames);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RequestLackFrames other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(BattleUserInfo, other.BattleUserInfo)) return false;
    if(!lackFrameIDs_.Equals(other.lackFrameIDs_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (battleUserInfo_ != null) hash ^= BattleUserInfo.GetHashCode();
    hash ^= lackFrameIDs_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (battleUserInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BattleUserInfo);
    }
    lackFrameIDs_.WriteTo(output, _repeated_lackFrameIDs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (battleUserInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BattleUserInfo);
    }
    lackFrameIDs_.WriteTo(ref output, _repeated_lackFrameIDs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (battleUserInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleUserInfo);
    }
    size += lackFrameIDs_.CalculateSize(_repeated_lackFrameIDs_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RequestLackFrames other) {
    if (other == null) {
      return;
    }
    if (other.battleUserInfo_ != null) {
      if (battleUserInfo_ == null) {
        BattleUserInfo = new global::BattleUserInfo();
      }
      BattleUserInfo.MergeFrom(other.BattleUserInfo);
    }
    lackFrameIDs_.Add(other.lackFrameIDs_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
        case 18:
        case 16: {
          lackFrameIDs_.AddEntriesFrom(input, _repeated_lackFrameIDs_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
        case 18:
        case 16: {
          lackFrameIDs_.AddEntriesFrom(ref input, _repeated_lackFrameIDs_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ResponseLackFrames : pb::IMessage<ResponseLackFrames>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ResponseLackFrames> _parser = new pb::MessageParser<ResponseLackFrames>(() => new ResponseLackFrames());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResponseLackFrames> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseLackFrames() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseLackFrames(ResponseLackFrames other) : this() {
    lackFrames_ = other.lackFrames_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseLackFrames Clone() {
    return new ResponseLackFrames(this);
  }

  /// <summary>Field number for the "lackFrames" field.</summary>
  public const int LackFramesFieldNumber = 1;
  private static readonly pb::FieldCodec<global::DownPlayerOperations> _repeated_lackFrames_codec
      = pb::FieldCodec.ForMessage(10, global::DownPlayerOperations.Parser);
  private readonly pbc::RepeatedField<global::DownPlayerOperations> lackFrames_ = new pbc::RepeatedField<global::DownPlayerOperations>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::DownPlayerOperations> LackFrames {
    get { return lackFrames_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResponseLackFrames);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResponseLackFrames other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!lackFrames_.Equals(other.lackFrames_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= lackFrames_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    lackFrames_.WriteTo(output, _repeated_lackFrames_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    lackFrames_.WriteTo(ref output, _repeated_lackFrames_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += lackFrames_.CalculateSize(_repeated_lackFrames_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResponseLackFrames other) {
    if (other == null) {
      return;
    }
    lackFrames_.Add(other.lackFrames_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          lackFrames_.AddEntriesFrom(input, _repeated_lackFrames_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          lackFrames_.AddEntriesFrom(ref input, _repeated_lackFrames_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class RequestGameOver : pb::IMessage<RequestGameOver>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RequestGameOver> _parser = new pb::MessageParser<RequestGameOver>(() => new RequestGameOver());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RequestGameOver> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestGameOver() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestGameOver(RequestGameOver other) : this() {
    battleUserInfo_ = other.battleUserInfo_ != null ? other.battleUserInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestGameOver Clone() {
    return new RequestGameOver(this);
  }

  /// <summary>Field number for the "battleUserInfo" field.</summary>
  public const int BattleUserInfoFieldNumber = 1;
  private global::BattleUserInfo battleUserInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BattleUserInfo BattleUserInfo {
    get { return battleUserInfo_; }
    set {
      battleUserInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RequestGameOver);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RequestGameOver other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(BattleUserInfo, other.BattleUserInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (battleUserInfo_ != null) hash ^= BattleUserInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (battleUserInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BattleUserInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (battleUserInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(BattleUserInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (battleUserInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(BattleUserInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RequestGameOver other) {
    if (other == null) {
      return;
    }
    if (other.battleUserInfo_ != null) {
      if (battleUserInfo_ == null) {
        BattleUserInfo = new global::BattleUserInfo();
      }
      BattleUserInfo.MergeFrom(other.BattleUserInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (battleUserInfo_ == null) {
            BattleUserInfo = new global::BattleUserInfo();
          }
          input.ReadMessage(BattleUserInfo);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ResponseGameOver : pb::IMessage<ResponseGameOver>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ResponseGameOver> _parser = new pb::MessageParser<ResponseGameOver>(() => new ResponseGameOver());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResponseGameOver> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseGameOver() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseGameOver(ResponseGameOver other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResponseGameOver Clone() {
    return new ResponseGameOver(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResponseGameOver);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResponseGameOver other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResponseGameOver other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

public sealed partial class Reconnect : pb::IMessage<Reconnect>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Reconnect> _parser = new pb::MessageParser<Reconnect>(() => new Reconnect());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Reconnect> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Reconnect() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Reconnect(Reconnect other) : this() {
    uid_ = other.uid_;
    clientIP_ = other.clientIP_;
    clientUdpPort_ = other.clientUdpPort_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Reconnect Clone() {
    return new Reconnect(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "clientIP" field.</summary>
  public const int ClientIPFieldNumber = 2;
  private string clientIP_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ClientIP {
    get { return clientIP_; }
    set {
      clientIP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "clientUdpPort" field.</summary>
  public const int ClientUdpPortFieldNumber = 3;
  private int clientUdpPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ClientUdpPort {
    get { return clientUdpPort_; }
    set {
      clientUdpPort_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Reconnect);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Reconnect other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    if (ClientIP != other.ClientIP) return false;
    if (ClientUdpPort != other.ClientUdpPort) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (ClientIP.Length != 0) hash ^= ClientIP.GetHashCode();
    if (ClientUdpPort != 0) hash ^= ClientUdpPort.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (ClientIP.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ClientIP);
    }
    if (ClientUdpPort != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ClientUdpPort);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (ClientIP.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ClientIP);
    }
    if (ClientUdpPort != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ClientUdpPort);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (ClientIP.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientIP);
    }
    if (ClientUdpPort != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientUdpPort);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Reconnect other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    if (other.ClientIP.Length != 0) {
      ClientIP = other.ClientIP;
    }
    if (other.ClientUdpPort != 0) {
      ClientUdpPort = other.ClientUdpPort;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
        case 18: {
          ClientIP = input.ReadString();
          break;
        }
        case 24: {
          ClientUdpPort = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
        case 18: {
          ClientIP = input.ReadString();
          break;
        }
        case 24: {
          ClientUdpPort = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ReconnectResponse : pb::IMessage<ReconnectResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ReconnectResponse> _parser = new pb::MessageParser<ReconnectResponse>(() => new ReconnectResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReconnectResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBBattleReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReconnectResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReconnectResponse(ReconnectResponse other) : this() {
    result_ = other.result_;
    seed_ = other.seed_;
    battleID_ = other.battleID_;
    allPlayers_ = other.allPlayers_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReconnectResponse Clone() {
    return new ReconnectResponse(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private bool result_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  /// <summary>Field number for the "seed" field.</summary>
  public const int SeedFieldNumber = 2;
  private int seed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Seed {
    get { return seed_; }
    set {
      seed_ = value;
    }
  }

  /// <summary>Field number for the "battleID" field.</summary>
  public const int BattleIDFieldNumber = 3;
  private int battleID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int BattleID {
    get { return battleID_; }
    set {
      battleID_ = value;
    }
  }

  /// <summary>Field number for the "allPlayers" field.</summary>
  public const int AllPlayersFieldNumber = 4;
  private static readonly pb::FieldCodec<global::BattleUserInfo> _repeated_allPlayers_codec
      = pb::FieldCodec.ForMessage(34, global::BattleUserInfo.Parser);
  private readonly pbc::RepeatedField<global::BattleUserInfo> allPlayers_ = new pbc::RepeatedField<global::BattleUserInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::BattleUserInfo> AllPlayers {
    get { return allPlayers_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReconnectResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReconnectResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    if (Seed != other.Seed) return false;
    if (BattleID != other.BattleID) return false;
    if(!allPlayers_.Equals(other.allPlayers_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != false) hash ^= Result.GetHashCode();
    if (Seed != 0) hash ^= Seed.GetHashCode();
    if (BattleID != 0) hash ^= BattleID.GetHashCode();
    hash ^= allPlayers_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (Seed != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Seed);
    }
    if (BattleID != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BattleID);
    }
    allPlayers_.WriteTo(output, _repeated_allPlayers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Result != false) {
      output.WriteRawTag(8);
      output.WriteBool(Result);
    }
    if (Seed != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Seed);
    }
    if (BattleID != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(BattleID);
    }
    allPlayers_.WriteTo(ref output, _repeated_allPlayers_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != false) {
      size += 1 + 1;
    }
    if (Seed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seed);
    }
    if (BattleID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleID);
    }
    size += allPlayers_.CalculateSize(_repeated_allPlayers_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReconnectResponse other) {
    if (other == null) {
      return;
    }
    if (other.Result != false) {
      Result = other.Result;
    }
    if (other.Seed != 0) {
      Seed = other.Seed;
    }
    if (other.BattleID != 0) {
      BattleID = other.BattleID;
    }
    allPlayers_.Add(other.allPlayers_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
        case 16: {
          Seed = input.ReadInt32();
          break;
        }
        case 24: {
          BattleID = input.ReadInt32();
          break;
        }
        case 34: {
          allPlayers_.AddEntriesFrom(input, _repeated_allPlayers_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Result = input.ReadBool();
          break;
        }
        case 16: {
          Seed = input.ReadInt32();
          break;
        }
        case 24: {
          BattleID = input.ReadInt32();
          break;
        }
        case 34: {
          allPlayers_.AddEntriesFrom(ref input, _repeated_allPlayers_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
